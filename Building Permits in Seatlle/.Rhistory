filter(PermitTypeDesc == "New") %>%
group_by(PermitClass) %>%
count(IssuedYear)
# Make a side by side bar plot that shows the number of different completed new permit classes issued each year
ggplot(data = complete_permit_class, aes(x = IssuedYear, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Completed New Residential Permits by Class Each Year",
x = "Year",
y = "Number of Completed New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.2,
position = position_dodge(.9), size = 4) +
labs(fill = "Class of Permit") +
theme_bw()
# Make a dataframe that conatins the permit class, issued year, and number of each permit class by year
issued_permit_class <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(PermitClass) %>%
count(IssuedYear)
# Make a side by side bar plot that shows the number of issued new permits by class each year
ggplot(data = issued_permit_class, aes(x = IssuedYear, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Issued New Residential Permits by Class Each Year",
x = "Year",
y = "Number of Issued New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 4) +
labs(fill = "Class of Permit") +
theme_bw()
# Make a dataframe that conatins the permit class, issued year, and number of completed new residential permits by neighborhood district
completed_permit_district <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
filter(NeighborhoodDistrict != "NA") %>%
group_by(PermitClass) %>%
count(NeighborhoodDistrict)
# Make a side by side bar plot that shows the number of completed new residential permits by neighborhood district
ggplot(data = completed_permit_district, aes(x = NeighborhoodDistrict, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Completed New Residential Permits by Neighborhood District",
x = "Neighborhood District",
y = "Number of Completed New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 2.2) +
labs(fill = "Class of Permit") +
theme_bw() +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
# attach tidyverse and gapminder packages
library(tidyverse)
# load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Create a dataframe that contains years and the number of issued residential permits
num_permits_year <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
group_by(IssuedYear) %>%
summarise(permits_per_year = n())
# Make a line plot of the number of residential permits issued each year
ggplot(data = num_permits_year, aes(x = IssuedYear, y = permits_per_year)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Number of Residential Permits Issued Each Year",
x = "Year",
y = "Number of Residential Permits Issued")+
theme_bw()
# Create a dataframe that contains the number of completed new residential permits and years
completed_residential <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(completed_permits = n())
# Make a line plot that shows the number of completed new residential permits each year
ggplot(data = completed_residential, aes(x = IssuedYear, y = completed_permits)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Total Number of Completed New Residential Permits per Year",
x = "Year",
y = "Number of New Completed Residential Permits") +
theme_bw()
# attach tidyverse and gapminder packages
library(tidyverse)
# load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Create a dataframe that contains years and the number of issued residential permits
num_permits_year <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(permits_per_year = n())
# Make a line plot of the number of residential permits issued each year
ggplot(data = num_permits_year, aes(x = IssuedYear, y = permits_per_year)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Number of New Residential Permits Issued Each Year",
x = "Year",
y = "Number of New Residential Permits Issued")+
theme_bw()
# attach tidyverse and gapminder packages
library(tidyverse)
# load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# attach tidyverse and gapminder packages
library(tidyverse)
# load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# attach tidyverse and gapminder packages
library(tidyverse)
# load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Create a dataframe that contains years and the number of issued residential permits
num_permits_year <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(permits_per_year = n())
# Make a line plot of the number of residential permits issued each year
ggplot(data = num_permits_year, aes(x = IssuedYear, y = permits_per_year)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Number of New Residential Permits Issued Each Year",
x = "Year",
y = "Number of New Residential Permits Issued")+
theme_bw()
# Create a dataframe that contains the number of completed new residential permits and years
completed_residential <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(completed_permits = n())
# Make a line plot that shows the number of completed new residential permits each year
ggplot(data = completed_residential, aes(x = IssuedYear, y = completed_permits)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Total Number of Completed New Residential Permits per Year",
x = "Year",
y = "Number of New Completed Residential Permits") +
theme_bw()
# Make a dataframe that conatins the permit class, issued year, and number of each permit class by year
issued_permit_class <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(PermitClass) %>%
count(IssuedYear)
# Make a side by side bar plot that shows the number of issued new permits by class each year
ggplot(data = issued_permit_class, aes(x = IssuedYear, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Issued New Residential Permits by Class Each Year",
x = "Year",
y = "Number of Issued New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 4) +
labs(fill = "Class of Permit") +
theme_bw()
# Creates a dataframe that counts the number of permits class each year
complete_permit_class <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(PermitClass) %>%
count(IssuedYear)
# Make a side by side bar plot that shows the number of different completed new permit classes issued each year
ggplot(data = complete_permit_class, aes(x = IssuedYear, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Completed New Residential Permits by Class Each Year",
x = "Year",
y = "Number of Completed New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.2,
position = position_dodge(.9), size = 4) +
labs(fill = "Class of Permit") +
theme_bw()
# Create a dataframe and computes the estimated cost of each unit
cost_per_unit <- permit_df %>%
filter(PermitClassMapped == "Residential") %>%
filter(HousingUnitsRemoved == 0) %>%
filter(HousingUnitsAdded != 0 & HousingUnitsAdded != 'NA') %>%
filter(EstProjectCost != 0 & EstProjectCost < 2000000) %>%
filter(PermitTypeMapped == "Building") %>%
mutate(estCost_unit = EstProjectCost / HousingUnitsAdded)
# Create a histogram that shows the estimated cost per unit by class
ggplot(data = cost_per_unit,
aes(x = estCost_unit, fill = PermitClass)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 100000) +
geom_vline(aes(xintercept=mean(estCost_unit)),
color="blue", linetype="dashed", size=1) +
labs(title = "Amount of Estimated Cost of Each Housing Unit by Class",
x = "Estimated Cost of Each Housing Unit",
y = "Count") +
labs(fill = "Class of Permit") +
theme_bw()
# Make a dataframe that contains the permit class, neighborhood district, and number of issued new residential permits by neighborhood district
issued_permit_district <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
filter(NeighborhoodDistrict != "NA") %>%
group_by(PermitClass) %>%
count(NeighborhoodDistrict)
# Make a side by side bar plot that shows the number of issued new residential permits by neighborhood district
ggplot(data = issued_permit_district, aes(x = NeighborhoodDistrict, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Issued New Residential Permits by Neighborhood District",
x = "Neighborhood District",
y = "Number of Issued New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 2.2) +
labs(fill = "Class of Permit") +
theme_bw() +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
# Make a dataframe that conatins the permit class, issued year, and number of completed new residential permits by neighborhood district
completed_permit_district <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
filter(NeighborhoodDistrict != "NA") %>%
group_by(PermitClass) %>%
count(NeighborhoodDistrict)
# Make a side by side bar plot that shows the number of completed new residential permits by neighborhood district
ggplot(data = completed_permit_district, aes(x = NeighborhoodDistrict, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Completed New Residential Permits by Neighborhood District",
x = "Neighborhood District",
y = "Number of Completed New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 2.2) +
labs(fill = "Class of Permit") +
theme_bw() +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
View(permit_df)
# Create a dataframe that contains years and the number of issued residential permits
num_permits_year <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(permits_per_year = n())
# Make a line plot of the number of residential permits issued each year
ggplot(data = num_permits_year, aes(x = IssuedYear, y = permits_per_year)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Number of New Residential Permits Issued Each Year",
x = "Year",
y = "Number of New Residential Permits Issued")+
theme_bw()
# Create a dataframe that contains years and the number of issued residential permits
num_permits_year <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(permits_per_year = n())
# Make a line plot of the number of residential permits issued each year
ggplot(data = num_permits_year, aes(x = IssuedYear, y = permits_per_year)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Number of New Residential Permits Issued Each Year",
x = "Year",
y = "Number of New Residential Permits Issued")+
theme_bw()
# attach tidyverse and gapminder packages
library(tidyverse)
# load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Load tidyverse package
library(tidyverse)
# Load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Load tidyverse package
library(tidyverse)
# Load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Load tidyverse package
library(tidyverse)
# Load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Create a dataframe and computes the estimated cost of each unit
cost_per_unit <- permit_df %>%
filter(PermitClassMapped == "Residential") %>%
filter(HousingUnitsRemoved == 0) %>%
filter(HousingUnitsAdded != 0 & HousingUnitsAdded != 'NA') %>%
filter(EstProjectCost != 0 & EstProjectCost < 2000000) %>%
filter(PermitTypeMapped == "Building") %>%
mutate(estCost_unit = EstProjectCost / HousingUnitsAdded)
# Create a histogram that shows the estimated cost per unit by class
ggplot(data = cost_per_unit,
aes(x = estCost_unit, fill = PermitClass)) +
geom_histogram(position="identity", alpha=0.3, binwidth = 100000) +
geom_vline(aes(xintercept=mean(estCost_unit)),
color="blue", linetype="dashed", size=1) +
labs(title = "Amount of Estimated Cost of Each Housing Unit by Class",
x = "Estimated Cost of Each Housing Unit",
y = "Count") +
labs(fill = "Class of Permit") +
theme_bw()
# Create a dataframe and computes the estimated cost of each unit
cost_per_unit <- permit_df %>%
filter(PermitClassMapped == "Residential") %>%
filter(HousingUnitsRemoved == 0) %>%
filter(HousingUnitsAdded != 0 & HousingUnitsAdded != 'NA') %>%
filter(EstProjectCost != 0 & EstProjectCost < 2000000) %>%
filter(PermitTypeMapped == "Building") %>%
mutate(estCost_unit = EstProjectCost / HousingUnitsAdded)
# Create a histogram that shows the estimated cost per unit by class
ggplot(data = cost_per_unit,
aes(x = estCost_unit, fill = PermitClass)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 100000) +
geom_vline(aes(xintercept=mean(estCost_unit)),
color="blue", linetype="dashed", size=1) +
labs(title = "Amount of Estimated Cost of Each Housing Unit by Class",
x = "Estimated Cost of Each Housing Unit",
y = "Count") +
labs(fill = "Class of Permit") +
theme_bw()
# Create a dataframe and computes the estimated cost of each unit
cost_per_unit <- permit_df %>%
filter(PermitClassMapped == "Residential") %>%
filter(HousingUnitsRemoved == 0) %>%
filter(HousingUnitsAdded != 0 & HousingUnitsAdded != 'NA') %>%
filter(EstProjectCost != 0 & EstProjectCost < 2000000) %>%
filter(PermitTypeMapped == "Building") %>%
mutate(estCost_unit = EstProjectCost / HousingUnitsAdded)
cost_per_unit$PermitClass <- factor(cost_per_unit$PermitClass, levels = c("Single Family/Duplew", "Multifamily")
# Create a histogram that shows the estimated cost per unit by class
ggplot(data = cost_per_unit,
# Create a dataframe and computes the estimated cost of each unit
cost_per_unit <- permit_df %>%
filter(PermitClassMapped == "Residential") %>%
filter(HousingUnitsRemoved == 0) %>%
filter(HousingUnitsAdded != 0 & HousingUnitsAdded != 'NA') %>%
filter(EstProjectCost != 0 & EstProjectCost < 2000000) %>%
filter(PermitTypeMapped == "Building") %>%
mutate(estCost_unit = EstProjectCost / HousingUnitsAdded)
cost_per_unit$PermitClass <- factor(cost_per_unit$PermitClass, levels = c("Single Family/Duplew", "Multifamily"))
# Create a histogram that shows the estimated cost per unit by class
ggplot(data = cost_per_unit,
aes(x = estCost_unit, fill = PermitClass)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 100000) +
geom_vline(aes(xintercept=mean(estCost_unit)),
color="blue", linetype="dashed", size=1) +
labs(title = "Amount of Estimated Cost of Each Housing Unit by Class",
x = "Estimated Cost of Each Housing Unit",
y = "Count") +
labs(fill = "Class of Permit") +
theme_bw()
# Create a dataframe and computes the estimated cost of each unit
cost_per_unit <- permit_df %>%
filter(PermitClassMapped == "Residential") %>%
filter(HousingUnitsRemoved == 0) %>%
filter(HousingUnitsAdded != 0 & HousingUnitsAdded != 'NA') %>%
filter(EstProjectCost != 0 & EstProjectCost < 2000000) %>%
filter(PermitTypeMapped == "Building") %>%
mutate(estCost_unit = EstProjectCost / HousingUnitsAdded)
cost_per_unit$PermitClass <- factor(cost_per_unit$PermitClass, levels = c("Single Family/Duplex", "Multifamily"))
# Create a histogram that shows the estimated cost per unit by class
ggplot(data = cost_per_unit,
aes(x = estCost_unit, fill = PermitClass)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 100000) +
geom_vline(aes(xintercept=mean(estCost_unit)),
color="blue", linetype="dashed", size=1) +
labs(title = "Amount of Estimated Cost of Each Housing Unit by Class",
x = "Estimated Cost of Each Housing Unit",
y = "Count") +
labs(fill = "Class of Permit") +
theme_bw()
# Create a dataframe that contains years and the number of issued residential permits
num_permits_year <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(permits_per_year = n())
# Make a line plot of the number of residential permits issued each year
ggplot(data = num_permits_year, aes(x = IssuedYear, y = permits_per_year)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Number of New Residential Permits Issued Each Year",
x = "Year",
y = "Number of New Residential Permits Issued")+
theme_bw()
# Load tidyverse package
library(tidyverse)
# Load data
permit_df <- read_csv("./Building_Permits_Clean.csv")
# Create a dataframe that contains years and the number of issued residential permits
num_permits_year <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(permits_per_year = n())
# Make a line plot of the number of residential permits issued each year
ggplot(data = num_permits_year, aes(x = IssuedYear, y = permits_per_year)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Number of New Residential Permits Issued Each Year",
x = "Year",
y = "Number of New Residential Permits Issued") +
theme_bw()
# Create a dataframe that contains the number of completed new residential permits and years
completed_residential <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(IssuedYear) %>%
summarise(completed_permits = n())
# Make a line plot that shows the number of completed new residential permits each year
ggplot(data = completed_residential, aes(x = IssuedYear, y = completed_permits)) +
geom_line(color = "red") +
geom_point() +
labs(title = "Total Number of Completed New Residential Permits per Year",
x = "Year",
y = "Number of New Completed Residential Permits") +
theme_bw()
# Make a dataframe that conatins the permit class, issued year, and number of each permit class by year
issued_permit_class <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(PermitClass) %>%
count(IssuedYear)
# Make a side by side bar plot that shows the number of issued new permits by class each year
ggplot(data = issued_permit_class, aes(x = IssuedYear, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Issued New Residential Permits by Class Each Year",
x = "Year",
y = "Number of Issued New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 4) +
labs(fill = "Class of Permit") +
theme_bw()
# Creates a dataframe that counts the number of permits class each year
complete_permit_class <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
group_by(PermitClass) %>%
count(IssuedYear)
# Make a side by side bar plot that shows the number of different completed new permit classes issued each year
ggplot(data = complete_permit_class, aes(x = IssuedYear, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of Completed New Residential Permits by Class Each Year",
x = "Year",
y = "Number of Completed New Residential Permits") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.2,
position = position_dodge(.9), size = 4) +
labs(fill = "Class of Permit") +
theme_bw()
# Create a dataframe and computes the estimated cost of each unit
cost_per_unit <- permit_df %>%
filter(PermitClassMapped == "Residential") %>%
filter(HousingUnitsRemoved == 0) %>%
filter(HousingUnitsAdded != 0 & HousingUnitsAdded != 'NA') %>%
filter(EstProjectCost != 0 & EstProjectCost < 2000000) %>% # Exclude one value that would have affected the mean too much
filter(PermitTypeMapped == "Building") %>%
mutate(estCost_unit = EstProjectCost / HousingUnitsAdded)
# Change the order of the legend for better visualization
cost_per_unit$PermitClass <- factor(cost_per_unit$PermitClass, levels = c("Single Family/Duplex", "Multifamily"))
# Create a histogram that shows the estimated cost per unit by class
ggplot(data = cost_per_unit,
aes(x = estCost_unit, fill = PermitClass)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 100000) +
geom_vline(aes(xintercept=mean(estCost_unit)),
color="blue", linetype="dashed", size=1) +
labs(title = "Amount of Estimated Cost of Each Housing Unit by Class",
x = "Estimated Cost of Each Housing Unit",
y = "Count") +
labs(fill = "Class of Permit") +
theme_bw()
# Make a dataframe that contains the permit class, neighborhood district, and number of issued new residential permits by neighborhood district
issued_permit_district <- permit_df %>%
filter(StatusCurrent == "Issued") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
filter(NeighborhoodDistrict != "NA") %>%
group_by(PermitClass) %>%
count(NeighborhoodDistrict)
# Make a side by side bar plot that shows the number of issued new residential permits by neighborhood district
ggplot(data = issued_permit_district, aes(x = NeighborhoodDistrict, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of New Residential Permits Issued by Neighborhood District",
x = "Neighborhood District",
y = "Number of New Residential Permits Issued ") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 2.2) +
labs(fill = "Class of Permit") +
theme_bw() +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
# Make a dataframe that conatins the permit class, issued year, and number of completed new residential permits by neighborhood district
completed_permit_district <- permit_df %>%
filter(StatusCurrent == "Completed") %>%
filter(PermitClassMapped == "Residential") %>%
filter(PermitTypeDesc == "New") %>%
filter(NeighborhoodDistrict != "NA") %>%
group_by(PermitClass) %>%
count(NeighborhoodDistrict)
# Make a side by side bar plot that shows the number of completed new residential permits by neighborhood district
ggplot(data = completed_permit_district, aes(x = NeighborhoodDistrict, y = n, fill = PermitClass)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
labs(title = "Number of New Residential Permits  Completed by Neighborhood District",
x = "Neighborhood District",
y = "Number of New Residential Permits Completed") +
geom_text(aes(label = n), fontface = "bold", vjust = 1.5,
position = position_dodge(.9), size = 2.2) +
labs(fill = "Class of Permit") +
theme_bw() +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
